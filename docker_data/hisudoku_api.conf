# nginx proxy publish a single port, and then user can access the services at specific paths (like http://localhost:8090/prometheus/, http://localhost:8090/grafana/, etc
server {
    # By default, nginx listens only on port 80, here we create a process that listens on additional ports
    listen 80;
    listen [::]:80;
#     listen 443 ssl;
#     listen [::]:443 ssl;

    # Nginx test the request's header field "Host" to determine which server the request should be routed to, if its value does not match any server name, or the request does not contain this header field at all, then nginx will route the request to the default server for this port. The default server is the first one. It can also be set explicitly which server should be default, with the default_server parameter in the listen directive. If request without the "Host" header field should not be allowed, a server that just drops the request can be defined by server_name ""; When server name is set to an empty string that will match requests wihtout the Host header field, and a special nginx non standard code 444 is returned that closes that connection, since 0.8 version, this is the default setting for the server name, in earlier versions, the machine's hostname was used as a default server_name.
    # server_name _; -defines an invalid server names which never intersect with any real name. It is just a non-match.
    server_name localhost;

    access_log /var/log/nginx/domain.log;
    error_log /var/log/nginx/domain-error.log;

#         proxy_set_header Authorization "";
#         proxy_set_header username   $remote_user;

    # when nginx selects a location block to serve it first checks location directives that specify prefizes, remembering location with the longest prefix, and then checks regular expressions, if there is a match with regex, nginx picks the one remembered earlier
    location / {
        proxy_pass http://hisudoku-api:9090;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
#         auth_basic off;
    }
}


